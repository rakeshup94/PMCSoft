@model PMCSoft.Core.Models.Account.RoleModel

@{
    ViewBag.Title = "Create Role";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div id="title-breadcrumb-option-demo" class="page-title-breadcrumb">
    <div class="page-header pull-left">
        <div class="page-title">Navigation Master</div>
    </div>
    <ol class="breadcrumb page-breadcrumb">
    </ol>
    <div class="clearfix"></div>
</div>
<!--END TITLE & BREADCRUMB PAGE--><!--BEGIN CONTENT-->
<div class="page-content">

    <div class="card">

        @using (Html.BeginForm("CreateRole", "User", FormMethod.Post, new { id = "rolefrm", role = "form", @class = "", novalidate = "novalidate", enctype = "multipart/form-data" }))
        {
            @Html.HiddenFor(m => m.RoleId, new { @class = "ignore" })
            <div class="card-body">
                <div class="row">

                    <div class="col-lg-6">
                        <div class="mb-3">
                            @Html.LabelFor(model => model.RoleName, new { @class = "control-label", @for = "inputName" })
                            <div class="Supplier">
                                @Html.TextBoxFor(model => model.RoleName, new { @class = "form-control Name", maxlength = "50", @placeholder = "Please Enter " + Html.DisplayNameFor(n => n.RoleName) })

                            </div>
                        </div>
                    </div>

                    <div class="col-lg-6 mt-4 pt-3">
                        <button type="submit" class="btn btn-outline-primary btn-square">Save</button>
                    </div>



                </div>

            </div>
        }
        @if (Model.RoleId == 0)
        {

            <div class="card-body">
                @{Html.RenderAction("RoleList", "User");}
            </div>

        }

    </div>

</div>














<h2>CreateRole</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>RoleModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CultureId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CultureId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CultureId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsPublished, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsPublished)
                    @Html.ValidationMessageFor(model => model.IsPublished, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedOn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedOn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedOn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RoleId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RoleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RoleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section styles {


}
@section scripts {

    @Scripts.Render("~/Scripts/validate")
    @Scripts.Render("~/JavaScript/RightsMaster.js")

}
